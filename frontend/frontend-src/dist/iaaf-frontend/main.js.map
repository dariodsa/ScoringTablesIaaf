{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/competition/competition.css","webpack:///./src/app/competition/competition.html","webpack:///./src/app/competition/competition.ts","webpack:///./src/app/competitions/competitions.css","webpack:///./src/app/competitions/competitions.html","webpack:///./src/app/competitions/competitions.ts","webpack:///./src/app/main/main.css","webpack:///./src/app/main/main.html","webpack:///./src/app/main/main.ts","webpack:///./src/app/model/countires.ts","webpack:///./src/app/results/results.css","webpack:///./src/app/results/results.html","webpack:///./src/app/results/results.ts","webpack:///./src/app/service/ComponentInjectorService.ts","webpack:///./src/app/service/RestConstants.ts","webpack:///./src/app/service/simple-rest-api-service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;ACZqD;AACE;AAEX;AACwB;AACI;AACnB;AAGrD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,gFAAqB,EAAC;IACzD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,iEAAgB,EAAC;IACnD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,oFAA2B,EAAC;IAClE,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,wDAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gFAAqB,EAAE;CAC/C,CAAC;AAMF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAE,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE;YACzC,OAAO,EAAE,CAAE,4DAAY,CAAE;SAC1B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;ACrB7B,2BAA2B,wBAAwB,sBAAsB,GAAG,YAAY,yBAAyB,iBAAiB,sBAAsB,8BAA8B,GAAG,SAAS,4BAA4B,oCAAoC,sBAAsB,gCAAgC,kBAAkB,GAAG,WAAW,SAAS,UAAU,kBAAkB,2CAA2C,GAAG,cAAc,4BAA4B,2CAA2C,sBAAsB,wBAAwB,GAAG,gBAAgB,mBAAmB,gCAAgC,sBAAsB,iEAAiE,yBAAyB,GAAG,cAAc,mBAAmB,GAAG,C;;;;;;;;;;;ACA3wB,8JAA8J,OAAO,4GAA4G,+FAA+F,+kBAA+kB,UAAU,sCAAsC,iLAAiL,aAAa,QAAQ,+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhnC;AAEI;AACjB;AASxD;IAQE,sBAAoB,WAAkC;QAAlC,gBAAW,GAAX,WAAW,CAAuB;QAPtD,UAAK,GAAG,qCAAqC,CAAC;QAC9C,WAAM,GAAG,oCAAoC;QAErC,YAAO,GAAa,KAAK,CAAC;QAMhC,EAAE,EAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACrD,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IACa,sBAAS,GAAvB;QACI,EAAE,EAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC;IACL,CAAC;IACD,4BAAK,GAAL;QAAA,iBAqBC;QAnBC,IAAI,QAAQ,GAAsB,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAE,CAAC,KAAK,CAAC;QAC7E,IAAI,QAAQ,GAAsB,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAE,CAAC,KAAK,CAAC;QAE7E,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,oEAAa,CAAC,UAAU,EAC/C,EAAC,QAAQ,EAAG,QAAQ;YACpB,QAAQ,EAAG,QAAQ,EAAC,CAAC,CAAC,SAAS,CACjC,UAAC,GAAY;YACX,EAAE,EAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBACb,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACjD,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;gBAC7C,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAClB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,KAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAErD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAK,CAAC,kBAAkB,CAAC,CAAC;YAC5B,CAAC;QACH,CAAC,CAChB,CAAC;IACJ,CAAC;IACD,6BAAM,GAAN;QACE,cAAc,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACvC,cAAc,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,QAAQ,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC;IAnDU,YAAY;QAPxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;QAED,gEAAU,EAAE;yCASuB,qFAAoB;OAR3C,YAAY,CAoDxB;IAAD,mBAAC;CAAA;AApDwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZiC;AACjB;AAEM;AACH;AACY;AACiB;AACK;AACJ;AAEnB;AACwB;AAEX;AACA;AACI;AACN;AACb;AACP;AA2B9C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAzBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wDAAa;gBACb,iFAAqB;gBACrB,qFAA2B;gBAC3B,kEAAgB;aAEjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,uEAAqB;gBACrB,qEAAgB;gBAChB,oEAAkB;gBAClB,gEAAc;gBACd,2DAAW;gBACX,mEAAmB;gBACnB,4FAAuB;aAGxB;YACD,SAAS,EAAE,CAAC,0FAAwB,EAAE,qFAAoB,EAAE,2DAAS,CAAC;YACtE,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC7CtB,6BAA6B,yBAAyB,0BAA0B,4BAA4B,GAAG,SAAS,iBAAiB,yBAAyB,gCAAgC,wBAAwB,GAAG,cAAc,6BAA6B,GAAG,YAAY,0BAA0B,aAAa,mCAAmC,GAAG,YAAY,kBAAkB,mBAAmB,GAAG,C;;;;;;;;;;;ACAxZ,gHAAgH,kBAAkB,yDAAyD,uEAAuE,+EAA+E,mgBAAmgB,yCAAyC,KAAK,8BAA8B,mBAAmB,6BAA6B,kBAAkB,6BAA6B,gBAAgB,6BAA6B,qBAAqB,6BAA6B,aAAa,6BAA6B,cAAc,6BAA6B,iBAAiB,grDAAgrD,cAAc,uXAAuX,mMAAmM,4vBAA4vB,YAAY,wVAAwV,YAAY,8eAA8e,+mBAA+mB,YAAY,gdAAgd,ghBAAghB,8BAA8B,wBAAwB,uDAAuD,KAAK,0DAA0D,SAAS,yDAAyD,mBAAmB,yDAAyD,6BAA6B,yDAAyD,eAAe,4OAA4O,6D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnrO;AACC;AAEjB;AAEA;AAMT;AACD;AAW/C;IA8BE,qCAAoB,WAAkC,EAAU,KAAsB;QAAlE,gBAAW,GAAX,WAAW,CAAuB;QAAU,UAAK,GAAL,KAAK,CAAiB;QA7BtF,UAAK,GAAG,qCAAqC,CAAC;QAC9C,WAAM,GAAG,oCAAoC,CAAC;QAE9C,YAAO,GAAmB,EAAE,CAAC;QAC7B,WAAM,GAAY,CAAC,CAAC,CAAC;QAGrB,gBAAW,GAAmB,EAAE,CAAC;QACjC,gBAAW,GAAmB,EAAE,CAAC;QAEjC,aAAQ,GAAoB,EAAE,CAAC;QAE/B,cAAS,GAAa,KAAK,CAAC;QAC5B,eAAU,GAAa,KAAK,CAAC;QAC7B,iBAAY,GAAa,KAAK,CAAC;QAE/B,SAAI,GAAmB,IAAI,KAAK,EAAE,CAAC;QAGnC,gBAAW,GAA8B,CAAC;YACtC,EAAE,EAAG,CAAC;YACN,IAAI,EAAG,EAAE;YACT,QAAQ,EAAG,CAAC,CAAC;YACb,eAAe,EAAG,GAAG;SACxB,CAAC,CAAC;QAMC,IAAI,CAAC,MAAM,GAAG,2DAAY,CAAC,SAAS,EAAE,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,0DAAS,CAAC,IAAI,CAAC;IACpC,CAAC;IACD,8CAAQ,GAAR;QAAA,iBAiBC;QAhBG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAe;YACxC,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,oEAAa,CAAC,oBAAoB,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CACpG,UAAC,IAAkB;YAChB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAExB,EAAE,EAAC,KAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,KAAI,CAAC,MAAM,CAAC;gBAAC,MAAM,CAAC;YAEpD,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,KAAI,CAAC,cAAc,EAAE,CAAC;YACtB,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CACJ,CAAC;IAGN,CAAC;IAEO,mDAAa,GAArB;QACE,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAEO,oDAAc,GAAtB;QACE,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAEO,+CAAS,GAAjB;QAAA,iBAoCC;QAnCC,IAAI,GAAG,GAAsB,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAE,CAAC,KAAK,CAAC;QAEvE,IAAI,WAAW,GAAsB,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAE,CAAC,KAAK,CAAC;QAC9E,IAAI,UAAU,GAAsB,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAE,CAAC,KAAK,CAAC;QACjF,IAAI,UAAU,GAAsB,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAE,CAAC,KAAK,CAAC;QACjF,+CAA+C;QAC/C,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,oEAAa,CAAC,0BAA0B,EACrE,EAAC,aAAa,EAAG,IAAI,CAAC,aAAa;YAClC,GAAG,EAAG,GAAG,EAAC,CAAC,CAAC,SAAS,CAC1B,UAAC,IAAc;YACb,EAAE,EAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBAChB,KAAK,CAAC,gDAAgD,CAAC,CAAC;YAC1D,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,IAAI,MAAM,GAAoB,CAAC;oBAC7B,EAAE,EAAG,CAAC;oBACN,aAAa,EAAG,KAAI,CAAC,aAAa;oBAClC,SAAS,EAAG,IAAI,CAAC,EAAE;oBACnB,UAAU,EAAG,UAAU;oBACvB,WAAW,EAAG,UAAU;oBACxB,oBAAoB,EAAG,WAAW;iBAEnC,CAAC,CAAC;gBAEH,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,oEAAa,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,SAAS,CACxE,UAAC,IAAI;oBACH,KAAK,CAAC,oBAAoB,CAAC,CAAC;oBAC5B,KAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,KAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC,EACD,UAAC,GAAG,IAAK,YAAK,CAAC,yBAAyB,CAAC,EAAhC,CAAgC,CAC1C,CAAC;YACJ,CAAC;QACH,CAAC,CACR,CAAC;IACJ,CAAC;IACD,gDAAU,GAAV;QAAA,iBAmCC;QAlCC,IAAI,SAAS,GAAsB,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAE,CAAC,KAAK,CAAC;QAC/E,IAAI,QAAQ,GAAsB,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAE,CAAC,KAAK,CAAC;QAC7E,IAAI,MAAM,GAAsB,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAE,CAAC,KAAK,CAAC;QACzE,IAAI,IAAI,GAAsB,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAE,CAAC,KAAK,CAAC;QAG5E,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,IAAI,GAAsB,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAE,CAAC,KAAK,CAAC;QACrE,IAAI,OAAO,GAAsB,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAE,CAAC,KAAK,CAAC;QAC3E,IAAI,GAAG,GAAsB,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAE,CAAC,KAAK,CAAC;QAEnE,IAAI,MAAM,GAAsB,CAAC;YAC7B,EAAE,EAAG,CAAC;YACN,aAAa,EAAG,IAAI,CAAC,aAAa;YAClC,SAAS,EAAG,SAAS;YACrB,QAAQ,EAAG,QAAQ;YACnB,WAAW,EAAG,WAAW;YACzB,MAAM,EAAG,MAAM;YACf,IAAI,EAAG,IAAI;YACX,OAAO,EAAG,OAAO;YACjB,GAAG,EAAG,GAAG;SACZ,CAAC,CAAC;QAGH,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,oEAAa,CAAC,WAAW,EAAE,MAAM,CAC5D,CAAC,SAAS,CACR,UAAC,IAAI;YACH,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC7B,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,EACD,UAAC,GAAG,IAAK,YAAK,CAAC,yBAAyB,GAAG,GAAG,CAAC,EAAtC,CAAsC,CAE/C,CAAC;IAET,CAAC;IAEO,0DAAoB,GAA5B;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAEO,iDAAW,GAAnB;QAAA,iBAQC;QAPC,IAAI,KAAK,GAAoB,EAAE,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,oEAAa,CAAC,iBAAiB,EAAE,EAAC,aAAa,EAAG,IAAI,CAAC,aAAa,EAAC,CAAC,CAAC,SAAS,CACvH,UAAC,IAAgB;YACf,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CACF,CAAC;IAEJ,CAAC;IAEQ,iDAAW,GAApB;QAAA,iBAkBC;QAhBC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,oEAAa,CAAC,WAAW,EAAE,EAAC,EAAE,EAAG,IAAI,CAAC,aAAa,EAAC,CAAC,CAAC,SAAS,CACtG,UAAC,IAAe;YACd,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC3C,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;oCACf,CAAC;gBAEL,KAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,oEAAa,CAAC,gBAAgB,EAAE,EAAC,EAAE,EAAG,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,SAAS,CACjH,UAAC,QAAkB;oBACf,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC;gBAChC,CAAC,CACH,CAAC;YACN,CAAC;YAPD,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAC,EAAE,CAAC;wBAA7B,CAAC;aAOR;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,qDAAe,GAAvB;QAAA,iBAMC;QALG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,oEAAa,CAAC,gBAAgB,CAAC,CAAC,SAAS,CACtE,UAAC,IAAe;YACZ,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5B,CAAC,CACF,CAAC;IACN,CAAC;IACO,oDAAc,GAAtB;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,oEAAa,CAAC,eAAe,CAAC,CAAC,SAAS,CACrE,UAAC,IAAe;YACZ,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5B,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,gDAAU,GAAlB;QAAA,iBAkCC;QA/BC,IAAI,IAAI,GAAsB,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAE,CAAC,KAAK,CAAC;QACzE,IAAI,UAAU,GAAsB,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAE,CAAC,KAAK,CAAC;QACrF,IAAI,GAAG,GAAsB,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAE,CAAC,KAAK,CAAC;QAGvE,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,oEAAa,CAAC,0BAA0B,EACzC,EAAC,aAAa,EAAG,IAAI,CAAC,aAAa;YAClC,GAAG,EAAG,GAAG,EAAC,CAAC,CAAC,SAAS,CACnB,UAAC,IAAc;YACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,EAAE,EAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBAChB,2BAA2B;gBAC3B,KAAK,CAAC,kDAAkD,CAAC,CAAC;YAC5D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAClB,KAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,oEAAa,CAAC,aAAa,EAC7D,EAAC,EAAE,EAAG,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,EAAE;oBACjC,SAAS,EAAG,IAAI,CAAC,EAAE;oBACnB,oBAAoB,EAAG,IAAI;oBAC3B,UAAU,EAAG,UAAU,EAAC,CAAC,CAAC,SAAS,CACxC,UAAC,IAAI;oBACH,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,KAAK,CAAC,sBAAsB,CAAC,CAAC;gBAChC,CAAC,CACH,CAAC;YACH,CAAC;QACJ,CAAC,CACF,CAAC;IAG7C,CAAC;IAED,+CAAS,GAAT,UAAU,EAAW;QACnB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAED,gDAAU,GAAV,UAAW,EAAW;QAAtB,iBASC;QARC,EAAE,EAAC,OAAO,CAAC,6CAA6C,CAAC,CAAC,CAAC,CAAC;YAC1D,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,oEAAa,CAAC,aAAa,EAAE,EAAC,EAAE,EAAG,EAAE,EAAC,CAAC,CAAC,SAAS,CACtF,UAAC,IAAI;gBACH,KAAK,CAAC,UAAU,CAAC,CAAC;gBAClB,KAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC,CACJ,CAAC;QACJ,CAAC;IACH,CAAC;IAhPU,2BAA2B;QARvC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;YAG3B,IAAI,EAAE;gBACJ,kBAAkB,EAAE,qBAAqB;aAC1C;SACF,CAAC;yCA+BkC,qFAAoB,EAAkB,8DAAc;OA9B3E,2BAA2B,CAkPvC;IAAD,kCAAC;CAAA;AAlPuC;;;;;;;;;;;;ACvBxC,6BAA6B,uBAAuB,gCAAgC,yBAAyB,GAAG,YAAY,0BAA0B,UAAU,iBAAiB,4CAA4C,0BAA0B,yBAAyB,GAAG,C;;;;;;;;;;;ACAnR,uHAAuH,svBAAsvB,2gBAA2gB,uDAAuD,KAAK,qJAAqJ,gBAAgB,KAAK,kBAAkB,wHAAwH,kBAAkB,iFAAiF,6BAA6B,4EAA4E,GAAG,wKAAwK,mJAAmJ,6D;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhsE;AACwB;AAEjB;AACT;AAOhD;IAWE,+BAAoB,WAAkC;QAAlC,gBAAW,GAAX,WAAW,CAAuB;QAVtD,UAAK,GAAG,qCAAqC,CAAC;QAC9C,WAAM,GAAG,oCAAoC,CAAC;QAE9C,iBAAY,GAAwB,EAAE,CAAC;QAEvC,mBAAc,GAAa,KAAK,CAAC;QAEjC,yBAAoB,GAAa,KAAK,CAAC;QAKpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,2DAAY,CAAC,SAAS,EAAE,CAAC;QAEvC,EAAE,EAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACnC,CAAC;IACJ,CAAC;IAGD,wCAAQ,GAAR,cAAY,CAAC;IAEL,kDAAkB,GAA1B;QACE,EAAE,EAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;IAC7C,CAAC;IAEO,8CAAc,GAAtB;QAAA,iBAoBC;QAnBC,EAAE,EAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC;QAE7B,IAAI,eAAe,GAAsB,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAE,CAAC,KAAK,CAAC;QAC3F,IAAI,eAAe,GAAsB,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAE,CAAC,KAAK,CAAC;QAC3F,IAAI,WAAW,GAA8B,CAAC;YACpC,EAAE,EAAG,CAAC;YACN,IAAI,EAAG,eAAe;YACtB,eAAe,EAAG,eAAe;YACjC,QAAQ,EAAG,2DAAY,CAAC,SAAS,EAAE;SAC5C,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,oEAAa,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC,SAAS,CAClF,UAAC,IAAI;YACH,KAAK,CAAC,uBAAuB,CAAC,CAAC;YAC/B,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,EACD,UAAC,GAAG,IAAK,YAAK,CAAC,yBAAyB,CAAC,EAAhC,CAAgC,CAC1C,CAAC;IACJ,CAAC;IAEQ,gDAAgB,GAAzB;QAAA,iBAeC;QAbC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,oEAAa,CAAC,gBAAgB,CAAC,CAAC,SAAS,CACtE,UAAC,IAAoB;YACnB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;gBAC5C,EAAE,EAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,eAAe,IAAI,SAAS,CAAC,CAAC,CAAC;oBACrD,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,SAAS,CAAC;gBACnD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,WAAW,CAAC;gBACrD,CAAC;YACH,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAGO,iDAAiB,GAAzB,UAA0B,EAAW;QAArC,iBAYC;QAXC,EAAE,EAAC,OAAO,CAAC,iDAAiD,CAAC,CAAC,CAAC,CAAC;YAC9D,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,oEAAa,CAAC,kBAAkB,EAAE,EAAC,EAAE,EAAG,EAAE,EAAC,CAAC,CAAC,SAAS,CAC7F,UAAC,IAAI;gBACH,KAAK,CAAC,yBAAyB,CAAC,CAAC;gBACjC,KAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,CAAC,EACD,UAAC,GAAG;gBACF,KAAK,CAAC,uBAAuB,CAAC,CAAC;YACjC,CAAC,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IApFU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAYkC,qFAAoB;OAX3C,qBAAqB,CAqFjC;IAAD,4BAAC;CAAA;AArFiC;;;;;;;;;;;;ACXlC,mB;;;;;;;;;;;ACAA,oC;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IALA;QAME,UAAK,GAAG,qCAAqC,CAAC;QAC9C,WAAM,GAAG,oCAAoC;IAS/C,CAAC;IAPC,gCAAQ,GAAR;IAEA,CAAC;IAED,6BAAK,GAAL;IAEA,CAAC;IAVU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,MAAM;;;SAGjB,CAAC;OACW,aAAa,CAWzB;IAAD,oBAAC;CAAA;AAXyB;;;;;;;;;;;;;;ACP1B;AAAA;IAAA;IAGA,CAAC;IADiB,cAAI,GAAG,CAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,oBAAoB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,gBAAgB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,qBAAqB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,iCAAiC,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,kCAAkC,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,wBAAwB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,eAAe,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,gCAAgC,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,mBAAmB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,gBAAgB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,0BAA0B,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,kBAAkB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,yBAAyB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,uCAAuC,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,oBAAoB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,gBAAgB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,oBAAoB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,mBAAmB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,6BAA6B,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,eAAe,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,eAAe,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,kBAAkB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,6BAA6B,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,eAAe,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,mCAAmC,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,+BAA+B,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,2BAA2B,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,wCAAwC,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,oBAAoB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,kCAAkC,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,eAAe,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,4CAA4C,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,kBAAkB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,iCAAiC,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,sBAAsaAAa,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,eAAe,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,gBAAgB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,0BAA0B,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,qBAAqB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,kBAAkB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,oBAAoB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,uBAAuB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,8CAA8C,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,uBAAuB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,4BAA4B,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,2BAA2B,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,kCAAkC,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,uBAAuB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,2BAA2B,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,iBAAiB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,8CAA8C,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,wBAAwB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,sBAAsB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,2BAA2B,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,8BAA8B,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,qBAAqB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,0BAA0B,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,sBAAsB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,gBAAgB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,eAAe,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,sCAAsC,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,mCAAmC,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,yBAAyB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,sBAAsB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,mBAAmB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,gBAAgB,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAC,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,CAAC,CAAC;IACh2S,gBAAC;CAAA;AAHqB;;;;;;;;;;;;ACAtB,0BAA0B,4BAA4B,yBAAyB,GAAG,C;;;;;;;;;;;ACAlF,8PAA8P,YAAY,2FAA2F,iCAAiC,KAAK,qDAAqD,qBAAqB,4BAA4B,uBAAuB,QAAQ,sBAAsB,2CAA2C,kBAAkB,yEAAyE,OAAO,+BAA+B,cAAc,6B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9qB;AACwB;AAEjB;AACA;AASzD;IAUE,0BAAoB,WAAkC,EAAU,KAAsB;QAAlE,gBAAW,GAAX,WAAW,CAAuB;QAAU,UAAK,GAAL,KAAK,CAAiB;QATtF,UAAK,GAAG,qCAAqC,CAAC;QAC9C,WAAM,GAAG,oCAAoC,CAAC;QAEtC,kBAAa,GAAY,CAAC,CAAC;QAC3B,eAAU,GAAgC,IAAI,GAAG,EAAE,CAAC;QACpD,gBAAW,GAAiB,IAAI,GAAG,EAAE,CAAC;QAEtC,YAAO,GAA4B,IAAI,KAAK,EAAE,CAAC;IAGvD,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAe;YACxC,KAAI,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAClC,KAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,oEAAa,CAAC,WAAW,EAAE,EAAC,EAAE,EAAG,KAAI,CAAC,aAAa,EAAC,CAAC,CAAC,SAAS,CACpG,UAAC,IAAe;gBACZ,IAAI,CAAC,OAAO,CAAC,iBAAO;oBAEhB,EAAE,EAAC,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;wBACxC,IAAI,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;wBAClD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACnB,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;oBACjD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC/D,CAAC;oBACD,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;gBAC7C,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IAEL,CAAC;IAEO,0CAAe,GAAvB;QAAA,iBAwCC;QAvCG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,KAAe,EAAE,GAAY;YAEpD,IAAI,MAAM,GAAsC,CAAC;gBAC7C,SAAS,EAAG,CAAC;gBACb,IAAI,EAAG,KAAI,CAAC,YAAY,EAAE;gBAC1B,KAAK,EAAG,CAAC;gBACT,MAAM,EAAG,IAAI,KAAK,EAAE;aACvB,CAAC,CAAC;YAEH,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,oBAAU;gBACjC,IAAI,KAAK,GAAG,CAAC,CAAC;gBACd,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;oBACnC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;oBAC5E,EAAE,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC;wBACrC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;oBAC1B,CAAC;gBACL,CAAC;gBACD,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;gBAC/B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAC3B,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC;YACxB,CAAC,CAAC,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC;YACvB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,IAAI,EAAE,IAAI;YAC3B,EAAE,EAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,CAAC,CAAC,CAAC;YACd,CAAC;YAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAC;gBAC/B,MAAM,CAAC,CAAC,CAAC;YACb,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,CAAC,CAAC;YACb,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAEO,uCAAY,GAApB;QAAA,iBASC;QARK,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAO;YACxB,uBAAuB;YACvB,KAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,oEAAa,CAAC,gBAAgB,EAAE,EAAC,EAAE,EAAG,OAAO,CAAC,SAAS,EAAC,CAAC,CAAC,SAAS,CACxG,UAAC,IAAc;gBACX,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;YACxB,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACT,CAAC;IAEO,uCAAY,GAApB;QACE,MAAM,CAAU,CAAC;YACb,EAAE,EAAG,CAAC;YACN,aAAa,EAAG,CAAC;YACjB,SAAS,EAAG,EAAE;YACd,QAAQ,EAAG,EAAE;YACb,OAAO,EAAG,EAAE;YACZ,IAAI,EAAG,EAAE;YACT,MAAM,EAAG,EAAE;YACX,WAAW,EAAG,EAAE;YAChB,GAAG,EAAG,EAAE;SACX,CAAC,CAAC;IACL,CAAC;IAtGU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;yCAWkC,qFAAoB,EAAkB,8DAAc;OAV3E,gBAAgB,CAuG5B;IAAD,uBAAC;CAAA;AAvG4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbgE;AAI7F;IAKC,kCAA8C,eAAe;QAC5D,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IACxC,CAAC;IAGM,oDAAiB,GAAxB,UAAyB,QAA0B;QAClD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC1B,CAAC;IAGM,gDAAa,GAApB,UAAqB,cAAmB;QACvC,IAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC;QACtF,IAAM,SAAS,GAAG,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAExE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IArBW,wBAAwB;QADpC,gEAAU,EAAE;QAMC,uEAAM,CAAC,sEAAwB,CAAC;;OALjC,wBAAwB,CAsBpC;IAAD,+BAAC;CAAA;AAtBoC;;;;;;;;;;;;;;ACJrC;AAAA;IAAA;IA8BA,CAAC;IA5Be,oBAAM,GAAY,wBAAwB,CAAC;IAC3C,6BAAe,GAAW,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC;IAEzD,wBAAU,GAAY,aAAa,CAAC,eAAe,GAAG,MAAM,CAAC;IAE7D,0BAAY,GAAY,aAAa,CAAC,eAAe,GAAG,aAAa,CAAC;IACtE,6BAAe,GAAY,aAAa,CAAC,eAAe,GAAG,gBAAgB,CAAC;IAC5E,8BAAgB,GAAY,aAAa,CAAC,eAAe,GAAG,iBAAiB,CAAC;IAC9E,6BAAe,GAAY,aAAa,CAAC,eAAe,GAAG,gBAAgB,CAAC;IAE5E,yBAAW,GAAY,aAAa,CAAC,eAAe,GAAG,aAAa,CAAC;IACrE,6BAAe,GAAY,aAAa,CAAC,eAAe,GAAG,kBAAkB,CAAC;IAC9E,wBAAU,GAAY,aAAa,CAAC,eAAe,GAAG,YAAY,CAAC;IAEnE,8BAAgB,GAAY,aAAa,CAAC,eAAe,GAAG,cAAc,CAAC;IAC3E,kCAAoB,GAAY,aAAa,CAAC,eAAe,GAAG,cAAc,CAAC;IAE/E,yBAAW,GAAY,aAAa,CAAC,eAAe,GAAG,0BAA0B,CAAC;IAClF,wBAAU,GAAY,aAAa,CAAC,eAAe,GAAG,WAAW,CAAC;IAClE,+BAAiB,GAAY,aAAa,CAAC,eAAe,GAAG,4BAA4B,CAAC;IAC1F,wCAA0B,GAAY,aAAa,CAAC,eAAe,GAAG,iCAAiC,CAAC;IACxG,8BAAgB,GAAY,aAAa,CAAC,eAAe,GAAG,YAAY,CAAC;IAEzE,2BAAa,GAAY,aAAa,CAAC,eAAe,GAAG,qBAAqB,CAAC;IAC/E,gCAAkB,GAAY,aAAa,CAAC,eAAe,GAAG,yBAAyB,CAAC;IAExF,2BAAa,GAAY,aAAa,CAAC,eAAe,GAAG,qBAAqB,CAAC;IAE9F,oBAAC;CAAA;AA9ByB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCe;AACgC;AACvC;AAKlC;IAIC,8BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QACnC,IAAI,CAAC,OAAO,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAErE,IAAI,CAAC,OAAO,GAAG,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;IACxC,CAAC;IAEc,gCAAW,GAA1B,UAA2B,GAAa;QACvC,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QAEtB,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;IACnB,CAAC;IAEc,gCAAW,GAA1B,UAA2B,KAAU;QACpC,IAAI,YAAY,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACnD,KAAK,CAAC,MAAM,CAAC,CAAC,CAAI,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,CAAC,CAAC,CAAC,cAAc,CAAC;QACzE,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAE5B,MAAM,CAAC,+CAAU,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IACvC,CAAC;IAED,4CAAa,GAAb,UAAc,GAAW;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IAED,sDAAuB,GAAvB,UAAwB,GAAW,EAAE,UAAkB;QACtD,IAAI,OAAO,GAAG;YACb,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;SAC1C,CAAC;QAEF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,EAAE,OAAO,CAAC,CAAC;IACzC,CAAC;IAED,4CAAa,GAAb,UAAc,GAAW,EAAE,MAAW;QACrC,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAChD,CAAC;IAGO,gDAAiB,GAAzB,UAA0B,QAAgB;QACzC,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG;YAC1C,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,UAAU,CAAC;IACnB,CAAC;IAjDW,oBAAoB;QADhC,gEAAU,EAAE;yCAKc,+DAAU;OAJxB,oBAAoB,CAkDhC;IAAD,2BAAC;CAAA;AAlDgC;;;;;;;;;;;;;;ACRjC;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main';\nimport { CompetitionsComponent } from './competitions/competitions';\nimport { CompetitionToolbarComponent } from './competition/competition';\nimport { ResultsComponent } from './results/results';\n \n \nconst routes: Routes = [\n  { path: 'competitions', component: CompetitionsComponent},\n  { path: 'results/:id', component: ResultsComponent},\n  { path: 'competition/:id', component: CompetitionToolbarComponent},\n  { path: 'main', component: MainComponent },\n  { path: '', component: CompetitionsComponent }\n];\n \n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}","module.exports = \".author {\\n    text-align: right;\\n    font-size: 10px;\\n}\\n.nav-link{\\n    text-align: center;\\n    width: 70%;\\n    font-size: 28px;\\n    font-family: sans-serif;\\n}\\na:link{\\n    text-decoration: none;\\n    \\n    font-family: sans-serif;\\n    font-size: 27px;\\n    background-color: #b8d0e6;\\n    color: blue;\\n}\\na:hover {\\n    \\n}\\n.navbar{\\n    width: 100%;\\n    background-color: rgb(162, 236, 162);\\n}\\n.bottomBar {\\n    width: -moz-available;\\n    background-color: rgb(162, 236, 162);\\n    font-size: 11px;\\n    margin-top: 100px;\\n}\\n.login-button{\\n    color: white;\\n    background-color: #006dcc;\\n    font-size: 14px;\\n    font-family: \\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif;\\n    text-align: center;\\n}\\n.login-form{\\n    float: right;\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<table class=\\\"navbar\\\">\\n  <tr>\\n    <td class=\\\"nav-link\\\">\\n      {{title}}\\n    </td>\\n    <td>\\n      <a href=\\\"/competitions\\\">Natjecanja</a>\\n    </td>\\n    <td style=\\\"width:20%;\\\"></td>\\n    <td>\\n      <div *ngIf=\\\"loginIn == false\\\">\\n        <form (ngSubmit)=\\\"login();\\\">\\n          <table class=\\\"login-form\\\">\\n            <tr>\\n              \\n                <td>\\n                  <input type=\\\"text\\\" id=\\\"username\\\" placeholder=\\\"korisničko ime\\\"/>\\n                </td>\\n                <td>\\n                    <input type=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"lozinka\\\"/>\\n                </td>\\n                <td>\\n                  <input class=\\\"login-button\\\" value=\\\"Prijava\\\" type=\\\"submit\\\"/>\\n                </td>\\n            </tr>\\n        </table>\\n      </form>\\n    </div>\\n    <div *ngIf=\\\"loginIn == true\\\">\\n        Bok {{username}}!\\n        <button (click)=\\\"logout();\\\">Odjava</button>\\n      </div>\\n    </td>\\n  </tr>\\n</table>\\n<hr>\\n<router-outlet></router-outlet>    \\n<table class=\\\"bottomBar\\\">\\n  <tr>\\n   <td style=\\\"text-align: right;\\\">\\n      {{author}}\\n    </td>\\n  </tr>\\n</table>\"","import { Component, OnInit, Injectable, Input } from '@angular/core';\nimport {ActivatedRoute, Params, Route, Router} from '@angular/router';\nimport { SimpleRestApiService } from './service/simple-rest-api-service';\nimport { RestConstants } from './service/RestConstants';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n@Injectable()\nexport class AppComponent{\n  title = 'Aplikacija za računanje IAAF bodova';\n  author = \"Dario Sindičić, AK Maksimir, 2018.\"\n\n  private loginIn : boolean = false;\n\n  private username : string;\n\n  constructor(private restService : SimpleRestApiService) {\n    \n    if(sessionStorage.getItem(\"userId\") != \"null\") {\n      this.loginIn = true;\n      this.username = sessionStorage.getItem(\"username\");\n    }\n    console.log(this.loginIn);\n  }\n  public static getUserId() : number {\n      if(sessionStorage.getItem(\"userId\") != \"null\") {\n        return Number(sessionStorage.getItem(\"userId\"));\n      } else {\n        return -1;\n      }\n  }\n  login() {\n    \n    let username = (<HTMLInputElement>document.getElementById(\"username\")).value;\n    let password = (<HTMLInputElement>document.getElementById(\"password\")).value;\n\n    this.restService.getUrlServiceWithParams(RestConstants.CHECK_USER, \n                      {username : username,\n                      password : password}).subscribe(\n                    (res : number) => {\n                      if(res != -1) {\n                        sessionStorage.setItem(\"userId\", res.toString());\n                        sessionStorage.setItem(\"username\", username);\n                        location.reload(); \n                        this.loginIn = true;\n                        this.username = sessionStorage.getItem(\"username\");\n                        \n                      } else {\n                        alert(\"Login nije uspio\");\n                      }\n                    }\n    );\n  }\n  logout() {\n    sessionStorage.setItem(\"userId\", null);\n    sessionStorage.setItem(\"username\", null);\n    this.loginIn = false;\n    this.username = null;\n    location.reload(); \n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SimpleRestApiService } from './service/simple-rest-api-service';\nimport { ComponentInjectorService } from './service/ComponentInjectorService';\nimport { MatAutocompleteModule, MatInputModule } from '@angular/material';\n\nimport { MatFormFieldModule } from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \n\nimport { HttpClientModule, HttpClient } from '@angular/common/http'; \nimport { CompetitionsComponent } from './competitions/competitions';\nimport { CompetitionToolbarComponent } from './competition/competition';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ResultsComponent } from './results/results';\nimport { Countries } from './model/countires';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    CompetitionsComponent,\n    CompetitionToolbarComponent,\n    ResultsComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatAutocompleteModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule\n    \n    \n  ],\n  providers: [ComponentInjectorService, SimpleRestApiService, Countries],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".container{\\n    margin-left: 150px;\\n    margin-right: 150px;\\n    width: -moz-available;\\n}\\n.table{\\n    width: 94%;\\n    text-align: center;\\n    background-color: #eee8f3;\\n    margin-left: 80px;\\n}\\ntable.table{\\n    border: 1px solid #ddd;\\n}\\ntr:hover {background-color:#e0d7a3;}\\n.selected {\\n    background-color: lightcoral;\\n}\\nimg.image{\\n    width: 40px;\\n    height: 40px;\\n}\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"userId == competition.authorId\\\">\\n    \\n    <h4>\\n        {{competition.name}}\\n    </h4>\\n    \\n    <button (click)=\\\"showNewResult();\\\">Dodaj rezultat</button><br>\\n    <button (click)=\\\"showNewAthlete();\\\">Dodaj atletičara</button><br>\\n    <button (click)=\\\"showRegistedAthletes();\\\">Popis atletičara</button><br>\\n    <button >Promijeni rezultate</button><br>\\n    \\n    <div *ngIf=\\\"showAthletes\\\">\\n        <table class=\\\"table\\\">\\n            <tr>\\n                <td>Redni broj</td>\\n                <td>Ime</td>\\n                <td>Prezime</td>\\n                <td>Spol</td>\\n                <td>Datum rođenja</td>\\n                <td>Startni broj</td>\\n                <td>Klub</td>\\n                <td>Država</td>\\n            </tr>\\n            <tr *ngFor=\\\"let athlete of athletes; let i = index\\\">\\n                <td>{{i+1}}.</td>\\n                <td>{{athlete.firstName}}</td>\\n                <td>{{athlete.lastName}}</td>\\n                <td>{{athlete.gender}}</td>\\n                <td>{{athlete.dateOfBirth}}</td>\\n                <td>{{athlete.bib}}</td>\\n                <td>{{athlete.club}}</td>\\n                <td>{{athlete.country}}</td>\\n            </tr>\\n        </table>\\n    </div>\\n    <div id=\\\"newAthlete\\\" *ngIf=\\\"newAthlete\\\">\\n        <table>\\n            <tr>\\n                <td colspan=\\\"4\\\">\\n                    <h4>\\n                        Novi atletičar\\n                    </h4>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td>Ime:</td>\\n                <td>\\n                    <input type=\\\"text\\\" id=\\\"firstName\\\" placeholder=\\\"Mirko\\\"/>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td>Prezime:</td>\\n                <td>\\n                    <input type=\\\"text\\\" id=\\\"lastName\\\" placeholder=\\\"Mišić\\\"/>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td>Spol:</td>\\n                <td>\\n                    <select id=\\\"gender\\\">\\n                        <option value=\\\"MALE\\\">Muški</option>\\n                        <option value=\\\"FEMALE\\\">Ženski</option>\\n                    </select>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td>Datum rođenja:</td>\\n                <td>\\n                    <input type=\\\"date\\\" id=\\\"dateOfBirth\\\" placeholder=\\\"01.01.1970\\\"/>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td>Klub:</td>\\n                <td>\\n                    <input type=\\\"text\\\" id=\\\"club\\\" placeholder=\\\"Ak Maksimir\\\"/>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td>Država:</td>\\n                <td>\\n                    <select id=\\\"country\\\">\\n                        <option value=\\\"hr\\\">Hrvatska</option>\\n                        <option *ngFor=\\\"let country of countries\\\" value=\\\"country.Code\\\">{{country.Name}}</option>\\n                    </select>\\n                </td>\\n            </tr>\\n            \\n            <tr>\\n                <td>Startni broj:</td>\\n                <td><input type=\\\"number\\\" id=\\\"bib\\\" placeholder=\\\"242\\\"/></td>\\n            </tr>\\n            <tr>\\n                <td></td>\\n                <td>\\n                    <button (click)=\\\"addAthlete();\\\">Registriraj atletičara</button>\\n                </td>\\n            </tr>\\n        </table>\\n    </div>\\n    <div id=\\\"newResult\\\" *ngIf=\\\"newResult\\\">\\n        <form (ngSubmit)=\\\"addResult();\\\">\\n        <table>\\n            <tr>\\n                <td colspan=\\\"3\\\">\\n                    <h4>Novi rezultat</h4>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td>Startni broj:</td>\\n                <td>\\n                    <input type=\\\"number\\\" id=\\\"athlete\\\"/>\\n                    \\n                </td>\\n                </tr>\\n            <tr>\\n                <td>Rezultat:</td>\\n                <td><input type=\\\"text\\\" id=\\\"result\\\" placeholder=\\\"02:28:23\\\"></td>\\n            </tr>\\n            <tr>\\n                <td>Discliplina: </td>\\n                <td>\\n                    <select id=\\\"discipline\\\">\\n                        <option *ngFor=\\\"let discipline of disciplines\\\">\\n                            {{discipline}}\\n                        </option>\\n                    </select>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td>Tip mjerenja: </td>\\n                <td>\\n                    <select id=\\\"measurment\\\">\\n                        <option *ngFor=\\\"let measurment of measurments\\\">\\n                            {{measurment}}\\n                        </option>\\n                    </select>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td></td>\\n                <td>\\n                    <input type=\\\"submit\\\" value=\\\"Dodaj rezultat\\\"/>\\n                </td>\\n            </tr>\\n        </table>\\n        </form>\\n    </div>\\n    <br>\\n    <div *ngIf=\\\"editId != -1\\\">\\n        <h4>\\n            Eidtiranje rezultata\\n        </h4>\\n        \\n        <form (ngSubmit)=\\\"editResult();\\\">\\n            <table>\\n                <tr>\\n                    <td>\\n                        Startni broj\\n                    </td>\\n                    <td>\\n                        <input id=\\\"editBib\\\" type=\\\"number\\\" #bibNumber/>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>\\n                        Disciplina      \\n                    </td>\\n                    <td>\\n                        <select id=\\\"editDiscipline\\\" #discipline>\\n                                <option *ngFor=\\\"let discipline of disciplines\\\">\\n                                    {{discipline}}\\n                                </option>\\n                        </select>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>\\n                        Vrijeme\\n                    </td>\\n                    <td>\\n                        <input id=\\\"editTime\\\" type=\\\"text\\\"/>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td colspan=\\\"2\\\" style=\\\"text-align:center;\\\">\\n                        <input type=\\\"submit\\\" value=\\\"Editiraj\\\"/>\\n                    </td>\\n                </tr>\\n            </table>\\n        </form>\\n    </div>\\n    <br> \\n    <h4>\\n        Zadnji 10 dodanih rezultata\\n    </h4>\\n    <table class=\\\"table\\\">\\n        <tr>\\n            <th>Redni broj</th>\\n            <th>Startni broj</th>\\n            <th>Disciplina</th>\\n            <th>Vrijeme</th>\\n            <th>Bodovi</th>\\n            <th></th>\\n        </tr>\\n        <tr *ngFor=\\\"let result of results; let i = index\\\" [ngClass]=\\\"{'selected': editId == i}\\\">\\n            \\n            <td>\\n                {{i+1}}.\\n            </td>\\n            <td>\\n                {{bibs[i]}}\\n            </td>\\n            <td>\\n                {{result.discipline}}\\n            </td>\\n            <td>\\n                {{result.resultRepresentation}}\\n            </td>\\n            <td>\\n                {{result.points}}\\n            </td>\\n            <td>\\n                <img class=\\\"image\\\" src=\\\"assets/images/edit.png\\\" (click)=\\\"setEditId(i)\\\"/>\\n                <img class=\\\"image\\\" src=\\\"assets/images/trash.png\\\" (click)=\\\"deleteById(result.id);\\\"/>\\n            </td>\\n        </tr>\\n    </table>\\n</div>\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { SimpleRestApiService } from '../service/simple-rest-api-service';\nimport { Competition } from '../model/competition';\nimport { RestConstants } from '../service/RestConstants';\nimport { Result } from '../model/result';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport {Observable, Subject} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { Athlete } from '../model/athlete';\nimport { AppComponent } from '../app.component';\nimport { Countries } from '../model/countires';\n\n\n@Component({\n  selector: 'competition/:id',\n  templateUrl: './competition.html',\n  styleUrls: ['./competition.css'],\n  host: {\n    '(document:click)': 'handleClick($event)',\n  }\n})\nexport class CompetitionToolbarComponent implements OnInit {\n  title = 'Aplikacija za računanje IAAF bodova';\n  author = \"Dario Sindičić, AK Maksimir, 2018.\";\n\n  results : Array<Result> = [];\n  editId : number = -1;\n\n\n  disciplines : Array<String> = [];\n  measurments : Array<String> = [];\n\n  athletes : Array<Athlete> = [];\n  \n  newResult : boolean = false;\n  newAthlete : boolean = false;\n  showAthletes : boolean = false;\n\n  bibs : Array<string> = new Array();\n  competitionId : number;\n \n  competition : Competition = <Competition>({\n      id : 0,\n      name : \"\",\n      authorId : -2,\n      competitionType : \"s\"\n  });\n\n  userId : number;\n  countries : any;\n\n  constructor(private restService : SimpleRestApiService, private route : ActivatedRoute) {\n      this.userId = AppComponent.getUserId();\n      this.countries = Countries.list;\n  }\n  ngOnInit() {\n      this.route.params.subscribe((params : Params) => {\n          this.competitionId = params['id'];\n      });\n      this.restService.getUrlService(RestConstants.GET_COMPETITION_INFO + \"/\" + this.competitionId).subscribe(\n         (next : Competition) => {\n            this.competition = next;\n            \n            if(this.competition.authorId != this.userId) return;\n            \n            this.initResults();\n            this.initMeasurment();\n            this.initDisciplines();\n          }\n      );\n      \n      \n  }\n\n  private showNewResult() : void {\n    this.newResult = !this.newResult;\n    this.newAthlete = false;\n    this.showAthletes = false;\n  }\n\n  private showNewAthlete() : void {\n    this.newAthlete = !this.newAthlete;\n    this.newResult = false;\n    this.showAthletes = false;\n  }\n\n  private addResult() : void {\n    let bib = (<HTMLInputElement>document.getElementById(\"athlete\")).value;\n    \n    let resultValue = (<HTMLInputElement>document.getElementById(\"result\")).value;\n    let discipline = (<HTMLInputElement>document.getElementById(\"discipline\")).value;\n    let measurment = (<HTMLInputElement>document.getElementById(\"measurment\")).value;\n    //TODO get athleteID with bib and competitionId\n    this.restService.getUrlServiceWithParams(RestConstants.GET_ATHLETE_COMPID_AND_BIB, \n                {competitionId : this.competitionId,\n                 bib : bib}).subscribe(\n            (next : Athlete) => {\n              if(next == null) {\n                alert(\"Ne postoji atletičar sa takvim starnim brojem.\");\n              }\n              else {\n                let result : Result = <Result>({\n                  id : 0,\n                  competitionId : this.competitionId,\n                  athleteId : next.id,\n                  discipline : discipline,\n                  measurement : measurment,\n                  resultRepresentation : resultValue\n    \n                });\n        \n                this.restService.updateService(RestConstants.ADD_RESULT, result).subscribe(\n                  (data) => {\n                    alert(\"Dodan je rezultat.\");\n                    this.showNewResult();\n                    this.initResults();\n                  },\n                  (err) => alert(\"Dogodila se pogreška.\\n\")\n                );\n              }\n            }\n    );\n  }\n  addAthlete() {\n    let firstName = (<HTMLInputElement>document.getElementById(\"firstName\")).value;\n    let lastName = (<HTMLInputElement>document.getElementById(\"lastName\")).value;\n    let gender = (<HTMLInputElement>document.getElementById(\"gender\")).value;\n    let date = (<HTMLInputElement>document.getElementById(\"dateOfBirth\")).value;\n    \n\n    let dateOfBirth = date;\n    let club = (<HTMLInputElement>document.getElementById(\"club\")).value;\n    let country = (<HTMLInputElement>document.getElementById(\"country\")).value;\n    let bib = (<HTMLInputElement>document.getElementById(\"bib\")).value;\n\n    let object : Athlete = <Athlete>({\n        id : 0,\n        competitionId : this.competitionId,\n        firstName : firstName,\n        lastName : lastName,\n        dateOfBirth : dateOfBirth,\n        gender : gender,\n        club : club,\n        country : country,\n        bib : bib\n    });\n      \n\n    this.restService.updateService(RestConstants.ADD_ATHLETE, object\n       ).subscribe(\n          (data) => {\n            alert(\"Atletičar je dodan.\");\n            this.newAthlete = false;\n          },\n          (err) => alert(\"Dogodila se pogreška.\\n\" + err)\n            \n         );\n\n  }\n\n  private showRegistedAthletes() : void {\n    this.getAthletes(); \n    this.showAthletes = !this.showAthletes;\n    this.newAthlete = false;\n    this.newResult = false;\n  }\n\n  private getAthletes() : void {\n    let array : Array<Athlete> = [];\n    this.restService.getUrlServiceWithParams(RestConstants.GET_ATHLETES_COMP, {competitionId : this.competitionId}).subscribe(\n      (next : Athlete[]) => {\n        this.athletes = next;\n      }\n    );\n    \n  }\n\n  private  initResults() : void {\n    \n    this.results = [];\n    this.restService.getUrlServiceWithParams(RestConstants.GET_RESULTS, {id : this.competitionId}).subscribe(\n      (next : Result[]) => {\n        this.results = next;\n        this.bibs = new Array(this.results.length);\n        this.results.reverse();\n        for(let i=0;i<this.results.length;++i) \n        {\n            this.restService.getUrlServiceWithParams(RestConstants.GET_ATHLETE_INFO, {id : this.results[i].athleteId}).subscribe(\n               (_athlete : Athlete) => {\n                   this.bibs[i] = _athlete.bib;\n               }\n            );\n        }\n      }\n    );\n  }\n\n  private initDisciplines() : void {\n      this.restService.getUrlService(RestConstants.LIST_DISCIPLINES).subscribe(\n        (next : String[]) => {\n            this.disciplines = next;\n        }\n      );\n  }\n  private initMeasurment() : void {\n    this.restService.getUrlService(RestConstants.LIST_MEASURMENT).subscribe(\n      (next : String[]) => {\n          this.measurments = next;\n      }\n    );\n  }\n\n  private editResult() : void {\n\n\n    let time = (<HTMLInputElement>document.getElementById(\"editTime\")).value;\n    let discipline = (<HTMLInputElement>document.getElementById(\"editDiscipline\")).value;\n    let bib = (<HTMLInputElement>document.getElementById(\"editBib\")).value;\n\n\n    this.restService.getUrlServiceWithParams(RestConstants.GET_ATHLETE_COMPID_AND_BIB,\n                                            {competitionId : this.competitionId,\n                                             bib : bib}).subscribe(\n                                               (next : Athlete) => {\n                                                 console.log(\"hjk\");\n                                                 if(next == null) {\n                                                   //ERROR !!!!!!!!!!!!!!!!!!!\n                                                   alert(\"Pod time startnim brojem nitko nije registriran.\");\n                                                 } else {\n                                                  console.log(\"hjk\");\n                                                   this.restService.getUrlServiceWithParams(RestConstants.UPDATE_RESULT, \n                                                          {id : this.results[this.editId].id,\n                                                           athleteId : next.id,\n                                                           resultRepresentation : time,\n                                                           discipline : discipline}).subscribe(\n                                                      (data) => {\n                                                        this.editId = -1;\n                                                        this.initResults();\n                                                        alert(\"Ažuriranje uspješno.\");\n                                                      }\n                                                   );\n                                                  }\n                                               }\n                                             );\n\n\n  }\n\n  setEditId(id : number) {\n    this.editId = id;\n  }\n\n  deleteById(id : number) {\n    if(confirm(\"Jesi li siguran da želiš obrisati rezultat?\")) {\n      this.restService.getUrlServiceWithParams(RestConstants.DELETE_RESULT, {id : id}).subscribe(\n          (data) => {\n            alert(\"Obrisano\");\n            this.initResults();\n          }\n      );\n    }\n  }\n\n}\n","module.exports = \".component{\\n    margin-top: 50px;\\n    \\n    margin-right: 100px;\\n    margin-left: 100px;\\n}\\ntr:hover {background-color:#f5f5f5;}\\n.table {\\n    width: 95%;\\n    /*background-color: rgb(77, 238, 238);*/\\n    margin-left: 40px;\\n    text-align: center;\\n}\"","module.exports = \"<div class=\\\"component\\\">\\n    <button *ngIf=\\\"ableToAddCompetition\\\" (click)=\\\"showNewCompetition();\\\">Dodaj natjecanje</button>\\n    <div id=\\\"newCompetition\\\" *ngIf=\\\"newCompetition\\\">\\n        <table>\\n            <tr>\\n                <td>Naziv natjecanja:</td>\\n                <td><input type=\\\"text\\\" id=\\\"competitionName\\\" placeholder=\\\"Državno prvenstvo u višeboju za veterane\\\"></td>\\n            </tr>\\n            <tr>\\n                <td>Tip natjecanja</td>\\n                <td>\\n                    <select id=\\\"competitionType\\\">\\n                        <option value=\\\"OUTDOOR\\\">Vanjsko</option>\\n                        <option value=\\\"INDOOR\\\">Dvoransko</option>\\n                    </select>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td></td>\\n                <td><button (click)=\\\"addCompetition();\\\">Dodaj natjecanje</button></td>\\n            </tr>\\n        </table>\\n    </div>\\n    <br> \\n    <br>\\n    <h3>Natjecanja</h3>\\n    <table class=\\\"table\\\" border=\\\"1\\\">\\n        <tr>\\n            <td>\\n                Redni broj\\n            </td>\\n            <td>\\n                Naziv natjecanja\\n            </td>\\n            <td>\\n                Tip natjecanja\\n            </td>\\n            <td>\\n                Rezultati\\n            </td>\\n        </tr>\\n        <tr *ngFor=\\\"let competition of competitions; let i = index\\\">\\n            <td>\\n                {{i+1}}.\\n            </td>\\n            <td>\\n                <div *ngIf=\\\"userId == competition.authorId\\\">\\n                    <a href=\\\"/competition/{{competition.id}}\\\">{{competition.name}}</a>\\n                </div>\\n                <div *ngIf=\\\"userId != competition.authorId\\\">\\n                        {{competition.name}}\\n                </div>\\n            </td>\\n            <td>\\n                {{competition.competitionType}}\\n            </td>\\n            <td>\\n                <a href=\\\"/results/{{i}}\\\">Rezultati</a>\\n            </td>\\n            <td *ngIf=\\\"userId == competition.authorId\\\">\\n                <!--<button (click)=\\\"deleteCompetition(competition.id);\\\">Delete</button>-->\\n                <img src=\\\"assets/images/trash.png\\\" height=\\\"40\\\" width=\\\"40\\\" (click)=\\\"deleteCompetition(competition.id);\\\"/>\\n            </td>\\n        </tr>\\n    </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SimpleRestApiService } from '../service/simple-rest-api-service';\nimport { Competition } from '../model/competition';\nimport { RestConstants } from '../service/RestConstants';\nimport { AppComponent } from '../app.component';\n\n@Component({\n  selector: 'competitions',\n  templateUrl: './competitions.html',\n  styleUrls: ['./competitions.css']\n})\nexport class CompetitionsComponent implements OnInit {\n  title = 'Aplikacija za računanje IAAF bodova';\n  author = \"Dario Sindičić, AK Maksimir, 2018.\";\n\n  competitions : Array<Competition> = [];\n  \n  newCompetition : boolean = false;\n\n  ableToAddCompetition : boolean = false;\n  userId : number;\n\n  constructor(private restService : SimpleRestApiService) {\n    \n     this.initCompetitions();\n     this.userId = AppComponent.getUserId();\n\n     if(this.userId != -1) {\n       this.ableToAddCompetition = true;\n     }\n  }\n\n\n  ngOnInit() {}\n\n  private showNewCompetition() : void {\n    if(this.userId == -1) {\n      this.newCompetition = false;\n      return;\n    }\n    this.newCompetition = !this.newCompetition;\n  }\n\n  private addCompetition() : void {\n    if(this.userId == -1) return;\n\n    let competitionName = (<HTMLInputElement>document.getElementById(\"competitionName\")).value;\n    let competitionType = (<HTMLInputElement>document.getElementById(\"competitionType\")).value;\n    let competition : Competition = <Competition>({\n              id : 0,\n              name : competitionName,\n              competitionType : competitionType,\n              authorId : AppComponent.getUserId()\n    });\n\n    this.restService.updateService(RestConstants.ADD_COMPETITION, competition).subscribe(\n      (data) => {\n        alert(\"Natjecanje je dodano.\");\n        this.showNewCompetition();\n        this.initCompetitions();\n      },\n      (err) => alert(\"Dogodila se pogreška.\\n\")\n    );\n  }\n\n  private  initCompetitions() : void {\n    \n    this.competitions = [];\n    this.restService.getUrlService(RestConstants.GET_COMPETITIONS).subscribe(\n      (next : Competition[]) => {\n        this.competitions = next;\n        for(let i=0;i<this.competitions.length; ++i) {\n          if(this.competitions[i].competitionType == \"OUTDOOR\") {\n            this.competitions[i].competitionType = \"Vanjsko\";\n          } else {\n            this.competitions[i].competitionType = \"Dvoransko\";\n          }  \n        }\n      }\n    );\n  }\n     \n  \n  private deleteCompetition(id : number) : void {\n    if(confirm(\"Jeste li sigurni da želite obrisati natjecanje?\")) {\n      this.restService.getUrlServiceWithParams(RestConstants.DELETE_COMPETITION, {id : id}).subscribe(\n        (data) => {\n          alert(\"Natjecanje je obrisano.\");\n          this.initCompetitions();\n        },\n        (err) => {\n          alert(\"Dogodila se pogreška.\");\n        }\n      );\n    }\n  }\n}","module.exports = \"\"","module.exports = \"fdsfdsfds\\nfdsfds\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'main',\n  templateUrl: './main.html',\n  styleUrls: ['./main.css']\n})\nexport class MainComponent implements OnInit {\n  title = 'Aplikacija za računanje IAAF bodova';\n  author = \"Dario Sindičić, AK Maksimir, 2018.\"\n\n  ngOnInit() {\n\n  }\n\n  login() {\n    \n  }\n}","export class Countries {\n\n    public static list = [{\"Code\": \"AF\", \"Name\": \"Afghanistan\"},{\"Code\": \"AX\", \"Name\": \"\\u00c5land Islands\"},{\"Code\": \"AL\", \"Name\": \"Albania\"},{\"Code\": \"DZ\", \"Name\": \"Algeria\"},{\"Code\": \"AS\", \"Name\": \"American Samoa\"},{\"Code\": \"AD\", \"Name\": \"Andorra\"},{\"Code\": \"AO\", \"Name\": \"Angola\"},{\"Code\": \"AI\", \"Name\": \"Anguilla\"},{\"Code\": \"AQ\", \"Name\": \"Antarctica\"},{\"Code\": \"AG\", \"Name\": \"Antigua and Barbuda\"},{\"Code\": \"AR\", \"Name\": \"Argentina\"},{\"Code\": \"AM\", \"Name\": \"Armenia\"},{\"Code\": \"AW\", \"Name\": \"Aruba\"},{\"Code\": \"AU\", \"Name\": \"Australia\"},{\"Code\": \"AT\", \"Name\": \"Austria\"},{\"Code\": \"AZ\", \"Name\": \"Azerbaijan\"},{\"Code\": \"BS\", \"Name\": \"Bahamas\"},{\"Code\": \"BH\", \"Name\": \"Bahrain\"},{\"Code\": \"BD\", \"Name\": \"Bangladesh\"},{\"Code\": \"BB\", \"Name\": \"Barbados\"},{\"Code\": \"BY\", \"Name\": \"Belarus\"},{\"Code\": \"BE\", \"Name\": \"Belgium\"},{\"Code\": \"BZ\", \"Name\": \"Belize\"},{\"Code\": \"BJ\", \"Name\": \"Benin\"},{\"Code\": \"BM\", \"Name\": \"Bermuda\"},{\"Code\": \"BT\", \"Name\": \"Bhutan\"},{\"Code\": \"BO\", \"Name\": \"Bolivia, Plurinational State of\"},{\"Code\": \"BQ\", \"Name\": \"Bonaire, Sint Eustatius and Saba\"},{\"Code\": \"BA\", \"Name\": \"Bosnia and Herzegovina\"},{\"Code\": \"BW\", \"Name\": \"Botswana\"},{\"Code\": \"BV\", \"Name\": \"Bouvet Island\"},{\"Code\": \"BR\", \"Name\": \"Brazil\"},{\"Code\": \"IO\", \"Name\": \"British Indian Ocean Territory\"},{\"Code\": \"BN\", \"Name\": \"Brunei Darussalam\"},{\"Code\": \"BG\", \"Name\": \"Bulgaria\"},{\"Code\": \"BF\", \"Name\": \"Burkina Faso\"},{\"Code\": \"BI\", \"Name\": \"Burundi\"},{\"Code\": \"KH\", \"Name\": \"Cambodia\"},{\"Code\": \"CM\", \"Name\": \"Cameroon\"},{\"Code\": \"CA\", \"Name\": \"Canada\"},{\"Code\": \"CV\", \"Name\": \"Cape Verde\"},{\"Code\": \"KY\", \"Name\": \"Cayman Islands\"},{\"Code\": \"CF\", \"Name\": \"Central African Republic\"},{\"Code\": \"TD\", \"Name\": \"Chad\"},{\"Code\": \"CL\", \"Name\": \"Chile\"},{\"Code\": \"CN\", \"Name\": \"China\"},{\"Code\": \"CX\", \"Name\": \"Christmas Island\"},{\"Code\": \"CC\", \"Name\": \"Cocos (Keeling) Islands\"},{\"Code\": \"CO\", \"Name\": \"Colombia\"},{\"Code\": \"KM\", \"Name\": \"Comoros\"},{\"Code\": \"CG\", \"Name\": \"Congo\"},{\"Code\": \"CD\", \"Name\": \"Congo, the Democratic Republic of the\"},{\"Code\": \"CK\", \"Name\": \"Cook Islands\"},{\"Code\": \"CR\", \"Name\": \"Costa Rica\"},{\"Code\": \"CI\", \"Name\": \"C\\u00f4te d'Ivoire\"},{\"Code\": \"CU\", \"Name\": \"Cuba\"},{\"Code\": \"CW\", \"Name\": \"Cura\\u00e7ao\"},{\"Code\": \"CY\", \"Name\": \"Cyprus\"},{\"Code\": \"CZ\", \"Name\": \"Czech Republic\"},{\"Code\": \"DK\", \"Name\": \"Denmark\"},{\"Code\": \"DJ\", \"Name\": \"Djibouti\"},{\"Code\": \"DM\", \"Name\": \"Dominica\"},{\"Code\": \"DO\", \"Name\": \"Dominican Republic\"},{\"Code\": \"EC\", \"Name\": \"Ecuador\"},{\"Code\": \"EG\", \"Name\": \"Egypt\"},{\"Code\": \"SV\", \"Name\": \"El Salvador\"},{\"Code\": \"GQ\", \"Name\": \"Equatorial Guinea\"},{\"Code\": \"ER\", \"Name\": \"Eritrea\"},{\"Code\": \"EE\", \"Name\": \"Estonia\"},{\"Code\": \"ET\", \"Name\": \"Ethiopia\"},{\"Code\": \"FK\", \"Name\": \"Falkland Islands (Malvinas)\"},{\"Code\": \"FO\", \"Name\": \"Faroe Islands\"},{\"Code\": \"FJ\", \"Name\": \"Fiji\"},{\"Code\": \"FI\", \"Name\": \"Finland\"},{\"Code\": \"FR\", \"Name\": \"France\"},{\"Code\": \"GF\", \"Name\": \"French Guiana\"},{\"Code\": \"PF\", \"Name\": \"French Polynesia\"},{\"Code\": \"TF\", \"Name\": \"French Southern Territories\"},{\"Code\": \"GA\", \"Name\": \"Gabon\"},{\"Code\": \"GM\", \"Name\": \"Gambia\"},{\"Code\": \"GE\", \"Name\": \"Georgia\"},{\"Code\": \"DE\", \"Name\": \"Germany\"},{\"Code\": \"GH\", \"Name\": \"Ghana\"},{\"Code\": \"GI\", \"Name\": \"Gibraltar\"},{\"Code\": \"GR\", \"Name\": \"Greece\"},{\"Code\": \"GL\", \"Name\": \"Greenland\"},{\"Code\": \"GD\", \"Name\": \"Grenada\"},{\"Code\": \"GP\", \"Name\": \"Guadeloupe\"},{\"Code\": \"GU\", \"Name\": \"Guam\"},{\"Code\": \"GT\", \"Name\": \"Guatemala\"},{\"Code\": \"GG\", \"Name\": \"Guernsey\"},{\"Code\": \"GN\", \"Name\": \"Guinea\"},{\"Code\": \"GW\", \"Name\": \"Guinea-Bissau\"},{\"Code\": \"GY\", \"Name\": \"Guyana\"},{\"Code\": \"HT\", \"Name\": \"Haiti\"},{\"Code\": \"HM\", \"Name\": \"Heard Island and McDonald Islands\"},{\"Code\": \"VA\", \"Name\": \"Holy See (Vatican City State)\"},{\"Code\": \"HN\", \"Name\": \"Honduras\"},{\"Code\": \"HK\", \"Name\": \"Hong Kong\"},{\"Code\": \"HU\", \"Name\": \"Hungary\"},{\"Code\": \"IS\", \"Name\": \"Iceland\"},{\"Code\": \"IN\", \"Name\": \"India\"},{\"Code\": \"ID\", \"Name\": \"Indonesia\"},{\"Code\": \"IR\", \"Name\": \"Iran, Islamic Republic of\"},{\"Code\": \"IQ\", \"Name\": \"Iraq\"},{\"Code\": \"IE\", \"Name\": \"Ireland\"},{\"Code\": \"IM\", \"Name\": \"Isle of Man\"},{\"Code\": \"IL\", \"Name\": \"Israel\"},{\"Code\": \"IT\", \"Name\": \"Italy\"},{\"Code\": \"JM\", \"Name\": \"Jamaica\"},{\"Code\": \"JP\", \"Name\": \"Japan\"},{\"Code\": \"JE\", \"Name\": \"Jersey\"},{\"Code\": \"JO\", \"Name\": \"Jordan\"},{\"Code\": \"KZ\", \"Name\": \"Kazakhstan\"},{\"Code\": \"KE\", \"Name\": \"Kenya\"},{\"Code\": \"KI\", \"Name\": \"Kiribati\"},{\"Code\": \"KP\", \"Name\": \"Korea, Democratic People's Republic of\"},{\"Code\": \"KR\", \"Name\": \"Korea, Republic of\"},{\"Code\": \"KW\", \"Name\": \"Kuwait\"},{\"Code\": \"KG\", \"Name\": \"Kyrgyzstan\"},{\"Code\": \"LA\", \"Name\": \"Lao People's Democratic Republic\"},{\"Code\": \"LV\", \"Name\": \"Latvia\"},{\"Code\": \"LB\", \"Name\": \"Lebanon\"},{\"Code\": \"LS\", \"Name\": \"Lesotho\"},{\"Code\": \"LR\", \"Name\": \"Liberia\"},{\"Code\": \"LY\", \"Name\": \"Libya\"},{\"Code\": \"LI\", \"Name\": \"Liechtenstein\"},{\"Code\": \"LT\", \"Name\": \"Lithuania\"},{\"Code\": \"LU\", \"Name\": \"Luxembourg\"},{\"Code\": \"MO\", \"Name\": \"Macao\"},{\"Code\": \"MK\", \"Name\": \"Macedonia, the Former Yugoslav Republic of\"},{\"Code\": \"MG\", \"Name\": \"Madagascar\"},{\"Code\": \"MW\", \"Name\": \"Malawi\"},{\"Code\": \"MY\", \"Name\": \"Malaysia\"},{\"Code\": \"MV\", \"Name\": \"Maldives\"},{\"Code\": \"ML\", \"Name\": \"Mali\"},{\"Code\": \"MT\", \"Name\": \"Malta\"},{\"Code\": \"MH\", \"Name\": \"Marshall Islands\"},{\"Code\": \"MQ\", \"Name\": \"Martinique\"},{\"Code\": \"MR\", \"Name\": \"Mauritania\"},{\"Code\": \"MU\", \"Name\": \"Mauritius\"},{\"Code\": \"YT\", \"Name\": \"Mayotte\"},{\"Code\": \"MX\", \"Name\": \"Mexico\"},{\"Code\": \"FM\", \"Name\": \"Micronesia, Federated States of\"},{\"Code\": \"MD\", \"Name\": \"Moldova, Republic of\"},{\"Code\": \"MC\", \"Name\": \"Monaco\"},{\"Code\": \"MN\", \"Name\": \"Mongolia\"},{\"Code\": \"ME\", \"Name\": \"Montenegro\"},{\"Code\": \"MS\", \"Name\": \"Montserrat\"},{\"Code\": \"MA\", \"Name\": \"Morocco\"},{\"Code\": \"MZ\", \"Name\": \"Mozambique\"},{\"Code\": \"MM\", \"Name\": \"Myanmar\"},{\"Code\": \"NA\", \"Name\": \"Namibia\"},{\"Code\": \"NR\", \"Name\": \"Nauru\"},{\"Code\": \"NP\", \"Name\": \"Nepal\"},{\"Code\": \"NL\", \"Name\": \"Netherlands\"},{\"Code\": \"NC\", \"Name\": \"New Caledonia\"},{\"Code\": \"NZ\", \"Name\": \"New Zealand\"},{\"Code\": \"NI\", \"Name\": \"Nicaragua\"},{\"Code\": \"NE\", \"Name\": \"Niger\"},{\"Code\": \"NG\", \"Name\": \"Nigeria\"},{\"Code\": \"NU\", \"Name\": \"Niue\"},{\"Code\": \"NF\", \"Name\": \"Norfolk Island\"},{\"Code\": \"MP\", \"Name\": \"Northern Mariana Islands\"},{\"Code\": \"NO\", \"Name\": \"Norway\"},{\"Code\": \"OM\", \"Name\": \"Oman\"},{\"Code\": \"PK\", \"Name\": \"Pakistan\"},{\"Code\": \"PW\", \"Name\": \"Palau\"},{\"Code\": \"PS\", \"Name\": \"Palestine, State of\"},{\"Code\": \"PA\", \"Name\": \"Panama\"},{\"Code\": \"PG\", \"Name\": \"Papua New Guinea\"},{\"Code\": \"PY\", \"Name\": \"Paraguay\"},{\"Code\": \"PE\", \"Name\": \"Peru\"},{\"Code\": \"PH\", \"Name\": \"Philippines\"},{\"Code\": \"PN\", \"Name\": \"Pitcairn\"},{\"Code\": \"PL\", \"Name\": \"Poland\"},{\"Code\": \"PT\", \"Name\": \"Portugal\"},{\"Code\": \"PR\", \"Name\": \"Puerto Rico\"},{\"Code\": \"QA\", \"Name\": \"Qatar\"},{\"Code\": \"RE\", \"Name\": \"R\\u00e9union\"},{\"Code\": \"RO\", \"Name\": \"Romania\"},{\"Code\": \"RU\", \"Name\": \"Russian Federation\"},{\"Code\": \"RW\", \"Name\": \"Rwanda\"},{\"Code\": \"BL\", \"Name\": \"Saint Barth\\u00e9lemy\"},{\"Code\": \"SH\", \"Name\": \"Saint Helena, Ascension and Tristan da Cunha\"},{\"Code\": \"KN\", \"Name\": \"Saint Kitts and Nevis\"},{\"Code\": \"LC\", \"Name\": \"Saint Lucia\"},{\"Code\": \"MF\", \"Name\": \"Saint Martin (French part)\"},{\"Code\": \"PM\", \"Name\": \"Saint Pierre and Miquelon\"},{\"Code\": \"VC\", \"Name\": \"Saint Vincent and the Grenadines\"},{\"Code\": \"WS\", \"Name\": \"Samoa\"},{\"Code\": \"SM\", \"Name\": \"San Marino\"},{\"Code\": \"ST\", \"Name\": \"Sao Tome and Principe\"},{\"Code\": \"SA\", \"Name\": \"Saudi Arabia\"},{\"Code\": \"SN\", \"Name\": \"Senegal\"},{\"Code\": \"RS\", \"Name\": \"Serbia\"},{\"Code\": \"SC\", \"Name\": \"Seychelles\"},{\"Code\": \"SL\", \"Name\": \"Sierra Leone\"},{\"Code\": \"SG\", \"Name\": \"Singapore\"},{\"Code\": \"SX\", \"Name\": \"Sint Maarten (Dutch part)\"},{\"Code\": \"SK\", \"Name\": \"Slovakia\"},{\"Code\": \"SI\", \"Name\": \"Slovenia\"},{\"Code\": \"SB\", \"Name\": \"Solomon Islands\"},{\"Code\": \"SO\", \"Name\": \"Somalia\"},{\"Code\": \"ZA\", \"Name\": \"South Africa\"},{\"Code\": \"GS\", \"Name\": \"South Georgia and the South Sandwich Islands\"},{\"Code\": \"SS\", \"Name\": \"South Sudan\"},{\"Code\": \"ES\", \"Name\": \"Spain\"},{\"Code\": \"LK\", \"Name\": \"Sri Lanka\"},{\"Code\": \"SD\", \"Name\": \"Sudan\"},{\"Code\": \"SR\", \"Name\": \"Suriname\"},{\"Code\": \"SJ\", \"Name\": \"Svalbard and Jan Mayen\"},{\"Code\": \"SZ\", \"Name\": \"Swaziland\"},{\"Code\": \"SE\", \"Name\": \"Sweden\"},{\"Code\": \"CH\", \"Name\": \"Switzerland\"},{\"Code\": \"SY\", \"Name\": \"Syrian Arab Republic\"},{\"Code\": \"TW\", \"Name\": \"Taiwan, Province of China\"},{\"Code\": \"TJ\", \"Name\": \"Tajikistan\"},{\"Code\": \"TZ\", \"Name\": \"Tanzania, United Republic of\"},{\"Code\": \"TH\", \"Name\": \"Thailand\"},{\"Code\": \"TL\", \"Name\": \"Timor-Leste\"},{\"Code\": \"TG\", \"Name\": \"Togo\"},{\"Code\": \"TK\", \"Name\": \"Tokelau\"},{\"Code\": \"TO\", \"Name\": \"Tonga\"},{\"Code\": \"TT\", \"Name\": \"Trinidad and Tobago\"},{\"Code\": \"TN\", \"Name\": \"Tunisia\"},{\"Code\": \"TR\", \"Name\": \"Turkey\"},{\"Code\": \"TM\", \"Name\": \"Turkmenistan\"},{\"Code\": \"TC\", \"Name\": \"Turks and Caicos Islands\"},{\"Code\": \"TV\", \"Name\": \"Tuvalu\"},{\"Code\": \"UG\", \"Name\": \"Uganda\"},{\"Code\": \"UA\", \"Name\": \"Ukraine\"},{\"Code\": \"AE\", \"Name\": \"United Arab Emirates\"},{\"Code\": \"GB\", \"Name\": \"United Kingdom\"},{\"Code\": \"US\", \"Name\": \"United States\"},{\"Code\": \"UM\", \"Name\": \"United States Minor Outlying Islands\"},{\"Code\": \"UY\", \"Name\": \"Uruguay\"},{\"Code\": \"UZ\", \"Name\": \"Uzbekistan\"},{\"Code\": \"VU\", \"Name\": \"Vanuatu\"},{\"Code\": \"VE\", \"Name\": \"Venezuela, Bolivarian Republic of\"},{\"Code\": \"VN\", \"Name\": \"Viet Nam\"},{\"Code\": \"VG\", \"Name\": \"Virgin Islands, British\"},{\"Code\": \"VI\", \"Name\": \"Virgin Islands, U.S.\"},{\"Code\": \"WF\", \"Name\": \"Wallis and Futuna\"},{\"Code\": \"EH\", \"Name\": \"Western Sahara\"},{\"Code\": \"YE\", \"Name\": \"Yemen\"},{\"Code\": \"ZM\", \"Name\": \"Zambia\"},{\"Code\": \"ZW\", \"Name\": \"Zimbabwe\"}];\n}","module.exports = \".table {\\n    width: -moz-available;\\n    text-align: center;\\n}\"","module.exports = \"<table class=\\\"table\\\">\\n    <tr>\\n        <td>Redni broj</td>\\n        <td></td>\\n        <td>Ime i Prezime</td>\\n        <td>Kategorija</td>\\n        <td>Klub</td>\\n        <td *ngFor=\\\"let discipline of disciplines\\\">\\n            {{discipline}}\\n        </td>\\n        <td>Zbroj</td>\\n    </tr>\\n    <tr *ngFor=\\\"let result of results; let i = index\\\">\\n        <td>{{i+1}}.</td>\\n        <td><img src=\\\"assets/images/flags/{{result.user.country}}.png\\\"></td>\\n        <td>{{result.user.firstName}}&nbsp;{{result.user.lastName}}</td>\\n        <td>M30</td>\\n        <td>{{result.user.club}}</td>\\n        <td *ngFor=\\\"let point of result.points\\\">\\n            {{point}}\\n        </td>\\n        <td>{{result.total}}</td>\\n    </tr>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SimpleRestApiService } from '../service/simple-rest-api-service';\nimport { Competition } from '../model/competition';\nimport { RestConstants } from '../service/RestConstants';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Result } from '../model/result';\nimport { Athlete } from '../model/athlete';\n\n@Component({\n  selector: 'results',\n  templateUrl: './results.html',\n  styleUrls: ['./results.css']\n})\nexport class ResultsComponent implements OnInit {\n  title = 'Aplikacija za računanje IAAF bodova';\n  author = \"Dario Sindičić, AK Maksimir, 2018.\";\n\n  private competitionId : number = 0;\n  private resultsMap : Map<number, Array<Result>> = new Map();\n  private disciplines : Set<String> = new Set();\n\n  private results : Array<ResultStructure> = new Array();\n\n  constructor(private restService : SimpleRestApiService, private route : ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe((params : Params) => {\n        this.competitionId = params['id'];\n        this.restService.getUrlServiceWithParams(RestConstants.GET_RESULTS, {id : this.competitionId}).subscribe(\n            (next : Result[]) => {\n                next.forEach(element => {\n                    \n                    if(this.resultsMap.has(element.athleteId)) {\n                        let list = this.resultsMap.get(element.athleteId);\n                        list.push(element);\n                        this.resultsMap.set(element.athleteId, list);\n                    } else {\n                        this.resultsMap.set(element.athleteId, new Array(element));\n                    }\n                    this.disciplines.add(element.discipline);\n                }); \n                \n                this.constructResult();\n            }\n        );\n    }); \n  \n  }\n\n  private constructResult() : void {\n      this.resultsMap.forEach((value: Result[], key : number) => {\n        \n        let result : ResultStructure = <ResultStructure>({\n            athleteId : 0,\n            user : this.getEmptyUser(),\n            total : 0,\n            points : new Array()\n        });\n\n        this.disciplines.forEach(discipline => {\n          let point = 0;\n          for(let i = 0; i < value.length; ++i) {\n              console.log(value[i].discipline + \" \" + discipline + \" \" + value[i].points);\n              if(value[i].discipline == discipline) {\n                point = value[i].points;\n              }\n          }\n          console.log(\"points \" + point);\n          result.points.push(point);\n          console.log(result.points);\n          result.total += point;\n        });\n        console.log(result);\n        result.athleteId = key;\n        this.results.push(result);\n      });\n      \n      this.results.sort((obj1, obj2) => {\n        if(obj1.total > obj2.total) {\n            return -1;\n        } else if(obj1.total < obj2.total){\n            return 1;\n        } else {\n            return 0;\n        }\n      });\n      this.getUsersInfo();\n      console.log(\"GOTOVO\");\n      console.log(this.results);\n  }\n\n  private getUsersInfo() {\n        this.results.forEach(element => {\n            //console.log(element);\n            this.restService.getUrlServiceWithParams(RestConstants.GET_ATHLETE_INFO, {id : element.athleteId}).subscribe(\n                (next : Athlete) => {\n                    element.user = next;\n                }\n            );\n        });\n  }\n\n  private getEmptyUser() :Athlete {\n    return <Athlete>({\n        id : 0,\n        competitionId : 0,\n        firstName : \"\",\n        lastName : \"\",\n        country : \"\",\n        club : \"\",\n        gender : \"\",\n        dateOfBirth : \"\",\n        bib : \"\"\n    });\n  }\n}\nexport interface ResultStructure {\n    athleteId : number;\n    user : Athlete;\n    total : number;\n    points : Array<number>;\n}","import {ComponentFactoryResolver, Inject, Injectable, ViewContainerRef} from \"@angular/core\";\n\n\n@Injectable()\nexport class ComponentInjectorService {\n\trootView: any;\n\tfactoryResolver: ComponentFactoryResolver;\n\n\n\tconstructor(@Inject(ComponentFactoryResolver) factoryResolver) {\n\t\tthis.factoryResolver = factoryResolver;\n\t}\n\n\n\tpublic setRootViewHolder(rootView: ViewContainerRef) {\n\t\tthis.rootView = rootView;\n\t}\n\n\n\tpublic fillComponent(componentClass: any) {\n\t\tconst componentFactory = this.factoryResolver.resolveComponentFactory(componentClass);\n\t\tconst component = componentFactory.create(this.rootView.parentInjector);\n\n\t\tthis.rootView.clear();\n\t\tthis.rootView.insert(component.hostView);\n\t}\n}\n","export class RestConstants {\n\n\tprivate static PREFIX : string = \"http://127.0.0.1:8080/\";\n\tprivate static REST_API_PREFIX: string = RestConstants.PREFIX + \"api/\";\n\t\n\tpublic static CHECK_USER : string = RestConstants.REST_API_PREFIX + \"user\";\n\n\tpublic static LIST_GENDERS : string = RestConstants.REST_API_PREFIX + \"listGenders\";\n\tpublic static LIST_CATEGORIES : string = RestConstants.REST_API_PREFIX + \"listCategories\";\n\tpublic static LIST_DISCIPLINES : string = RestConstants.REST_API_PREFIX + \"listDisciplines\";\n\tpublic static LIST_MEASURMENT : string = RestConstants.REST_API_PREFIX + \"listMeasurment\";\n\t\n\tpublic static ADD_ATHLETE : string = RestConstants.REST_API_PREFIX + \"athlete/add\";\n\tpublic static ADD_COMPETITION : string = RestConstants.REST_API_PREFIX + \"competitions/add\";\n\tpublic static ADD_RESULT : string = RestConstants.REST_API_PREFIX + \"result/add\";\n\n\tpublic static GET_COMPETITIONS : string = RestConstants.REST_API_PREFIX + \"competitions\";\n\tpublic static GET_COMPETITION_INFO : string = RestConstants.REST_API_PREFIX + \"competitions\";\n\n\tpublic static GET_RESULTS : string = RestConstants.REST_API_PREFIX + \"result/getCompetitionId/\";\n\tpublic static GET_POINTS : string = RestConstants.REST_API_PREFIX + \"getPoints\";\n\tpublic static GET_ATHLETES_COMP : string = RestConstants.REST_API_PREFIX + \"athlete/withCompetititonId\";\n\tpublic static GET_ATHLETE_COMPID_AND_BIB : string = RestConstants.REST_API_PREFIX + \"athlete/withCompetitionIdAndBib\";\n\tpublic static GET_ATHLETE_INFO : string = RestConstants.REST_API_PREFIX + \"athlete/id\";\n\n\tpublic static DELETE_RESULT : string = RestConstants.REST_API_PREFIX + \"result/deleteResult\";\n\tpublic static DELETE_COMPETITION : string = RestConstants.REST_API_PREFIX + \"competitions/deleteById\";\n\t\n\tpublic static UPDATE_RESULT : string = RestConstants.REST_API_PREFIX + \"result/updateResult\";\n\n}","import {Response} from '@angular/http';\nimport {Injectable} from \"@angular/core\";\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { RestConstants } from './RestConstants';\n\n\n@Injectable()\nexport class SimpleRestApiService {\n\tprivate headers: HttpHeaders;\n\tprivate options: object;\n\n\tconstructor(private http: HttpClient) {\n\t\tthis.headers = new HttpHeaders({\"Content-Type\": \"application/json\"});\n\n\t\tthis.options = {headers: this.headers};\n\t}\n\n\tprivate static extractData(res: Response) {\n\t\tlet body = res.json();\n\n\t\treturn body || {};\n\t}\n\n\tprivate static handleError(error: any) {\n\t\tlet errorMessage = (error.message) ? error.message :\n\t\t\terror.status ? `${error.status} - ${error.statusText}` : 'Server error';\n\t\tconsole.error(errorMessage);\n\n\t\treturn Observable.throw(errorMessage);\n\t}\n\n\tgetUrlService(url: string): Observable<any> {\n\t\treturn this.http.get<any>(url, this.options);\n\t}\n\n\tgetUrlServiceWithParams(url: string, jsonParams: object): Observable<any> {\n\t\tlet options = {\n\t\t\tparams: this.getParamsFromJSON(jsonParams),\n\t\t};\n\n\t\treturn this.http.get<any>(url, options);\n\t}\n\n\tupdateService(url: string, object: any): Observable<any> {\n\t\tlet body = JSON.stringify(object);\n\t\treturn this.http.post(url, body, this.options);\n\t}\n\n\t\n\tprivate getParamsFromJSON(jsonData: object): HttpParams {\n\t\tlet httpParams = new HttpParams();\n\t\tObject.keys(jsonData).forEach(function (key) {\n\t\t\thttpParams = httpParams.set(key, jsonData[key]);\n\t\t});\n\n\t\treturn httpParams;\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}